{
  "metadata": {
    "version": "1.0.0",
    "description": "Thisaru's Dotfiles Package Configuration",
    "last_updated": "2025-09-26",
    "format_version": "1.0"
  },
  "homebrew": {
    "taps": [
      {
        "name": "homebrew/bundle",
        "description": "Homebrew bundle support"
      },
      {
        "name": "homebrew/cask-fonts",
        "description": "Font packages"
      },
      {
        "name": "jesseduffield/lazygit",
        "description": "Official lazygit tap for frequent updates"
      }
    ]
  },
  "categories": {
    "core": {
      "description": "Essential tools required for dotfiles functionality",
      "enabled": true,
      "required": true,
      "prompt_message": null,
      "packages": {
        "stow": {
          "enabled": true,
          "type": "brew",
          "description": "Symlink farm manager",
          "required": true
        },
        "starship": {
          "enabled": true,
          "type": "brew",
          "description": "Fast, modern shell prompt written in Rust",
          "required": true
        },
        "fzf": {
          "enabled": true,
          "type": "brew",
          "description": "Fuzzy finder",
          "required": true
        },
        "zoxide": {
          "enabled": true,
          "type": "brew",
          "description": "Smart cd command",
          "required": true
        },
        "tree": {
          "enabled": true,
          "type": "brew",
          "description": "Directory tree viewer",
          "required": false
        },
        "bat": {
          "enabled": true,
          "type": "brew",
          "description": "Cat clone with syntax highlighting",
          "required": false
        },
        "eza": {
          "enabled": true,
          "type": "brew",
          "description": "Modern ls replacement",
          "required": false
        },
        "ripgrep": {
          "enabled": true,
          "type": "brew",
          "description": "Fast text search",
          "required": false
        },
        "fd": {
          "enabled": true,
          "type": "brew",
          "description": "Find replacement",
          "required": false
        },
        "git-delta": {
          "enabled": true,
          "type": "brew",
          "description": "Git diff viewer",
          "required": false
        },
        "lazygit": {
          "enabled": true,
          "type": "brew",
          "package_name": "jesseduffield/lazygit/lazygit",
          "description": "Terminal UI for git (official tap for frequent updates)",
          "required": false,
          "note": "Using official jesseduffield tap for more frequent updates than core Homebrew"
        },
        "tmux": {
          "enabled": true,
          "type": "brew",
          "description": "Terminal multiplexer",
          "required": false
        },
        "htop": {
          "enabled": true,
          "type": "brew",
          "description": "System monitor",
          "required": false
        },
        "direnv": {
          "enabled": true,
          "type": "brew",
          "description": "Directory-specific environments",
          "required": false
        },
        "atuin": {
          "enabled": true,
          "type": "brew",
          "description": "Shell history with sync",
          "required": false
        },
        "gh": {
          "enabled": true,
          "type": "brew",
          "description": "GitHub CLI",
          "required": false
        },
        "git-flow-avh": {
          "enabled": true,
          "type": "brew",
          "package_name": "git-flow-avh",
          "description": "Git branching model extension",
          "required": false
        }
      }
    },
    "security": {
      "description": "Tools for managing secrets and encryption",
      "enabled": true,
      "required": true,
      "prompt_message": null,
      "packages": {
        "sops": {
          "enabled": true,
          "type": "brew",
          "description": "Secrets OPerationS",
          "required": true
        },
        "age": {
          "enabled": true,
          "type": "brew",
          "description": "Simple file encryption",
          "required": true
        }
      }
    },
    "development": {
      "description": "Language version managers and development tools",
      "enabled": false,
      "required": false,
      "prompt_message": "Install development tools? (Python, Ruby, Node.js version managers)",
      "packages": {
        "pyenv": {
          "enabled": false,
          "type": "brew",
          "description": "Python version manager",
          "required": false
        },
        "rbenv": {
          "enabled": false,
          "type": "brew",
          "description": "Ruby version manager",
          "required": false
        },
        "nvm": {
          "enabled": false,
          "type": "brew",
          "description": "Node.js version manager",
          "required": false
        },
        "ballerina": {
          "enabled": true,
          "type": "brew",
          "package_name": "ballerina",
          "command_name": "bal",
          "description": "Cloud-native programming language",
          "required": false,
          "note": "Install via: brew install ballerina"
        }
      }
    },
    "database": {
      "description": "Database servers and tools",
      "enabled": false,
      "required": false,
      "prompt_message": "Install database tools?",
      "packages": {
        "postgresql@16": {
          "enabled": false,
          "type": "brew",
          "description": "PostgreSQL database",
          "required": false
        },
        "redis": {
          "enabled": false,
          "type": "brew",
          "description": "In-memory data store",
          "required": false
        }
      }
    },
    "aws": {
      "description": "AWS development tools",
      "enabled": false,
      "required": false,
      "prompt_message": "Install AWS tools?",
      "packages": {
        "aws-vault": {
          "enabled": false,
          "type": "brew",
          "description": "AWS credentials manager",
          "required": false
        }
      }
    },
    "gcp": {
      "description": "Google Cloud Platform tools",
      "enabled": false,
      "required": false,
      "prompt_message": "Install Google Cloud Platform tools?",
      "packages": {
        "google-cloud-sdk": {
          "enabled": false,
          "type": "cask",
          "description": "Google Cloud SDK and CLI tools",
          "required": false
        }
      }
    },
    "fonts": {
      "description": "Nerd fonts with icons for terminal display",
      "enabled": true,
      "required": true,
      "prompt_message": null,
      "packages": {
        "font-fira-code-nerd-font": {
          "enabled": true,
          "type": "cask",
          "description": "Nerd font with icons",
          "required": true
        }
      }
    },
    "editors": {
      "description": "Code editors and IDEs",
      "enabled": false,
      "required": false,
      "prompt_message": "Install code editors?",
      "packages": {
        "cursor": {
          "enabled": false,
          "type": "cask",
          "description": "AI-powered code editor",
          "required": false
        },
        "visual-studio-code": {
          "enabled": false,
          "type": "cask",
          "description": "Microsoft's code editor",
          "required": false
        }
      }
    },
    "terminals": {
      "description": "Modern terminal applications",
      "enabled": false,
      "required": false,
      "prompt_message": "Install terminal applications?",
      "packages": {
        "warp": {
          "enabled": false,
          "type": "cask",
          "description": "Modern terminal with AI features",
          "required": false
        },
        "iterm2": {
          "enabled": false,
          "type": "cask",
          "description": "Feature-rich terminal",
          "required": false
        }
      }
    },
    "containers": {
      "description": "Container management tools",
      "enabled": false,
      "required": false,
      "prompt_message": "Install container tools?",
      "packages": {
        "rancher-desktop": {
          "enabled": false,
          "type": "cask",
          "description": "Container management (Docker alternative)",
          "required": false
        },
        "docker": {
          "enabled": false,
          "type": "cask",
          "description": "Docker Desktop",
          "required": false
        }
      }
    },
    "productivity": {
      "description": "Productivity and utility applications",
      "enabled": false,
      "required": false,
      "prompt_message": "Install productivity apps?",
      "packages": {
        "postman": {
          "enabled": false,
          "type": "cask",
          "description": "API testing tool",
          "required": false
        },
        "tableplus": {
          "enabled": false,
          "type": "cask",
          "description": "Database management",
          "required": false
        },
        "raycast": {
          "enabled": false,
          "type": "cask",
          "description": "Spotlight replacement",
          "required": false
        },
        "rectangle": {
          "enabled": false,
          "type": "cask",
          "description": "Window management",
          "required": false
        },
        "alfred": {
          "enabled": false,
          "type": "cask",
          "description": "Productivity launcher",
          "required": false
        }
      }
    }
  },
  "special_installations": {
    "sdkman": {
      "enabled": true,
      "description": "Java, Gradle, Maven, Kotlin version manager",
      "prompt_message": "Install SDKMAN? (Java, Gradle, Maven, Kotlin version manager)",
      "install_command": "curl -fsSL \"https://get.sdkman.io\" -o /tmp/sdkman-install.sh && bash /tmp/sdkman-install.sh && rm /tmp/sdkman-install.sh",
      "post_install": [
        "source \"$HOME/.sdkman/bin/sdkman-init.sh\"",
        "sdk install java 21.0.5-tem"
      ]
    },
    "zinit": {
      "enabled": true,
      "description": "Zsh plugin manager",
      "prompt_message": "Install Zinit plugin manager?",
      "install_command": "bash -c \"$(curl --fail --show-error --silent --location https://raw.githubusercontent.com/zdharma-continuum/zinit/HEAD/scripts/install.sh)\""
    },
    "ballerina": {
      "enabled": true,
      "description": "Cloud-native programming language",
      "prompt_message": "Install Ballerina programming language?",
      "install_command": "curl -fsSL https://dist.ballerina.io/downloads/latest/ballerina-installer-macos.pkg -o /tmp/ballerina-installer.pkg && sudo installer -pkg /tmp/ballerina-installer.pkg -target / && rm /tmp/ballerina-installer.pkg",
      "post_install": [
        "echo 'Ballerina installed successfully'",
        "bal version"
      ]
    }
  }
}
